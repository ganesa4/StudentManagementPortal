{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/student.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\n\nconst routes: Routes = [{path:'', component:AppComponent}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { MessageService } from 'primeng/api';\nimport { Studentservice } from './student.service';\nimport { Student } from './student';\nimport { Advisor } from './advisor';\nimport { NgxSpinnerService } from \"ngx-spinner\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  public title = 'student-management-app';\n  public activeIndex: number;\n  public studcols: any = [];\n  public totalRecords: number;\n  public selectedStudent: Student = {};\n  public studentInfo: Student = {};\n  public allStudentInfo: Student[] = [];\n  public selectedRollNo: Student = {};\n  public editedStudentInfo: Student = {};\n  public advisorInfo: Advisor = {};\n  public displayModal: boolean = false;\n\n  constructor(private spinner:NgxSpinnerService, private studentservice: Studentservice, private messageService: MessageService) {\n    this.studcols = [{ header: 'Roll Number', field: 'rollNo' },\n    { header: 'Student Name', field: 'firstname' },\n    { header: 'Last Name', field: 'lastName' },\n    { header: 'Address', field: 'address' },\n    { header: 'Contact', field: 'contact' },\n    { header: 'Email Id', field: 'email' },\n    { header: 'Course', field: 'course' },\n    { header: 'Advisor Name', field: 'advisor' }];\n    this.studentservice.getAllStudentInfo().subscribe((data: Student[]) => {\n      if (Object.keys(data).length != 0) {\n        this.allStudentInfo = data;\n        this.totalRecords = this.allStudentInfo.length;\n        this.activeIndex = 0;\n      }\n    });\n  }\n  ngOnInit() { }\n\n  viewAdvisorInfo(advisorId: any) {\n    this.displayModal = false;\n    this.studentservice.getAdvisorInfo().subscribe((data: Advisor[]) => {\n      if (Object.keys(data).length != 0) {\n        for (let val in data) {\n          if (data[val].advisorId == advisorId) {\n            this.advisorInfo = data[val];\n            this.displayModal = true;\n          }\n        }\n      }\n    });\n  }\n\n  validateInputs(studentInfo: Student) {\n    if (studentInfo.firstname == null || studentInfo.firstname.trim() == '' || studentInfo.firstname == undefined) {\n      this.messageService.add({ key: 'tl', severity: 'error', summary: 'Error', detail: 'First Name should not be empty!' });\n      return false;\n    } if (studentInfo.lastName == null || studentInfo.lastName.trim() == '' || studentInfo.lastName == undefined) {\n      this.messageService.add({ key: 'tl', severity: 'error', summary: 'Error', detail: 'Last Name should not be empty!' });\n      return false;\n    } if (studentInfo.address == null || studentInfo.address.trim() == '' || studentInfo.address == undefined) {\n      this.messageService.add({ key: 'tl', severity: 'error', summary: 'Error', detail: 'Address should not be empty!' });\n      return false;\n    } if (studentInfo.contact == null || studentInfo.contact.trim() == '' || studentInfo.contact == undefined) {\n      this.messageService.add({ key: 'tl', severity: 'error', summary: 'Error', detail: 'Contact should not be empty!' });\n      return false;\n    } if (studentInfo.email == null || studentInfo.email.trim() == '' || studentInfo.email == undefined) {\n      this.messageService.add({ key: 'tl', severity: 'error', summary: 'Error', detail: 'Email Id should not be empty!' });\n      return false;\n    } if (studentInfo.course == null || studentInfo.course.trim() == '' || studentInfo.course == undefined) {\n      this.messageService.add({ key: 'tl', severity: 'error', summary: 'Error', detail: 'Course should not be empty!' });\n      return false;\n    } if (studentInfo.rollNo == null || studentInfo.rollNo.trim() == '' || studentInfo.rollNo == undefined) {\n      this.messageService.add({ key: 'tl', severity: 'error', summary: 'Error', detail: 'Roll Number should not be empty!' });\n      return false;\n    } if (studentInfo.advisor == null || studentInfo.advisor.trim() == '' || studentInfo.advisor == undefined) {\n      this.messageService.add({ key: 'tl', severity: 'error', summary: 'Error', detail: 'Advisor Name should not be empty!' });\n      return false;\n    }\n    return true;\n  }\n\n  saveStudentInfo(studentInfo: Student, dropdown: any) {\n    if (Object.keys(studentInfo).length != 0) {\n      if (this.validateInputs(studentInfo)) {\n        this.proceedToSave(studentInfo, dropdown);\n      }\n    } else {\n      this.messageService.add({ key: 'tl', severity: 'error', summary: 'Error', detail: 'Please enter a valid inputs!' });\n      return false;\n    }\n  }\n\n  proceedToSave(studentInfo: Student, dropdown: any) {\n    this.spinner.show();\n    let isSave: boolean = false;\n    for (let val in this.allStudentInfo) {\n      if (this.allStudentInfo[val].rollNo == studentInfo.rollNo.trim()) {\n        isSave = true;\n      }\n    } if (!isSave) {\n      this.allStudentInfo.unshift(studentInfo);\n      dropdown.options = this.allStudentInfo;\n      setTimeout(() => {\n        this.spinner.hide();\n        this.messageService.add({ key: 'tl', severity: 'success', summary: 'Success', detail: 'Student information has been added successfully!' });\n        this.activeIndex = 0;\n        this.resetStudentInfo();\n      }, 3000);\n    } else {\n      this.spinner.hide();\n      this.messageService.add({ key: 'tl', severity: 'error', summary: 'Error', detail: 'Roll number is already exist!' });\n    }\n  }\n\n  onChangeRollNumber(event: any) {\n    this.editedStudentInfo = {};\n    if (Object.keys(event.value).length != 0) {\n      this.editedStudentInfo = event.value;\n    }\n  }\n\n  updateStudentInfo(editedStudentInfo: Student) {\n    this.spinner.show();\n    if (Object.keys(this.selectedRollNo).length != 0) {\n      if (Object.keys(editedStudentInfo).length != 0) {\n        if (this.validateInputs(editedStudentInfo)) {\n          for (let val in this.allStudentInfo) {\n            if (this.allStudentInfo[val].rollNo == editedStudentInfo.rollNo.trim()) {\n              this.allStudentInfo[val] == editedStudentInfo;\n              setTimeout(() => {\n                this.spinner.hide();\n                this.messageService.add({ key: 'tl', severity: 'success', summary: 'Success', detail: 'Student information has been updated successfully!' });\n                this.activeIndex = 0;\n                this.resetStudentInfo();\n              },3000);\n            }\n          }\n        }\n      } else {\n        this.spinner.hide();\n        this.messageService.add({ key: 'tl', severity: 'error', summary: 'Error', detail: 'Please enter a valid inputs!' });\n        return false;\n      }\n    } else {\n      this.spinner.hide();\n      this.messageService.add({ key: 'tl', severity: 'error', summary: 'Error', detail: 'Please search with Roll Number!' });\n      return false;\n    }\n  }\n  removeStudentInfo() {\n    this.spinner.show();\n    let updatedStudent: Student[] = [];\n    if (Object.keys(this.selectedRollNo).length != 0) {\n      for (let val in this.allStudentInfo) {\n        if (this.allStudentInfo[val].rollNo != this.selectedRollNo.rollNo.trim()) {\n          updatedStudent.push(this.allStudentInfo[val]);\n        }\n      }\n      setTimeout(() => {\n        this.spinner.hide();\n        this.messageService.add({ key: 'tl', severity: 'success', summary: 'Success', detail: 'Student information has been deleted successfully!' });\n        this.activeIndex = 0;\n        this.allStudentInfo = updatedStudent;\n        this.resetStudentInfo();\n      }, 3000);\n    } else {\n      this.spinner.hide();\n      this.messageService.add({ key: 'tl', severity: 'error', summary: 'Error', detail: 'Please select the roll number to remove!' });\n      return false;\n    }\n  }\n  resetStudentInfo() {\n    this.studentInfo = {};\n    this.selectedRollNo = {};\n    this.editedStudentInfo = {};\n  }\n}\n","<div id=\"wrapper\">\n    <ngx-spinner bdColor=\"rgba(0, 0, 0, 0.8)\" size=\"medium\" color=\"#fff\" type=\"square-jelly-box\" [fullScreen]=\"true\">\n        <p style=\"color: white\"> Loading... </p>\n    </ngx-spinner>\n    <p-toast position=\"top-right\" key=\"tl\"></p-toast>\n    <p-dialog header=\"Advisor Information\" [(visible)]=\"displayModal\" [modal]=\"true\" [style]=\"{width: '55vw'}\"\n        [baseZIndex]=\"10000\" [draggable]=\"false\" [resizable]=\"false\">\n        <div class=\"row\" style=\"margin-top: 0;\">\n            <div class=\"col-lg-3\" style=\"text-align: right;\">\n                <label style=\"font-weight: 600;\">Advisor Name :</label>\n            </div>\n            <div class=\"col-lg-3\"><span>{{advisorInfo.advisorName}}</span></div>\n            <div class=\"col-lg-3\" style=\"text-align: right;\">\n                <label style=\"font-weight: 600;\">Department :</label>\n            </div>\n            <div class=\"col-lg-3\"><span>{{advisorInfo.department}}</span>\n            </div>\n        </div>\n        <div class=\"row\" style=\"margin-top: 0;\">\n            <div class=\"col-lg-3\" style=\"text-align: right;\">\n                <label style=\"font-weight: 600;\">Email Id :</label>\n            </div>\n            <div class=\"col-lg-3\"><span>{{advisorInfo.mailId}}</span>\n            </div>\n            <div class=\"col-lg-3\" style=\"text-align: right;\">\n                <label style=\"font-weight: 600;\">Contact :</label>\n            </div>\n            <div class=\"col-lg-3\"><span>{{advisorInfo.contact}}</span>\n            </div>\n        </div>\n    </p-dialog>\n    <nav class=\"navbar bg-dark navbar-dark fixed-top\">\n        <div class=\"container-fluid\">\n            <div class=\"navbar-header\">\n                <a class=\"navbar-brand\"><img src=\"assets/comlogo.png\" height=\"40\" width=\"140\">\n                    <span>Student Management Portal</span>\n                </a>\n            </div>\n            <ul class=\"nav navbar-nav navbar-right\">\n                <li><a style=\"color:white;\"><img src=\"assets/userImg.png\" height=\"30\" width=\"35\"> Welcome, Mr.\n                        Aravind</a></li>\n            </ul>\n        </div>\n    </nav>\n    <div class=\"container-fluid\" style=\"margin-top:100px\">\n        <p-tabView [(activeIndex)]=\"activeIndex\">\n            <p-tabPanel header=\"Dashboard\">\n                <ng-template pTemplate=\"header\"><i class=\"pi pi-fw pi-home\"></i><span\n                        style=\"margin-left: 10px;\">Dashboard</span></ng-template>\n                <p-card>\n                    <p-table [columns]=\"studcols\" [value]=\"allStudentInfo\" [paginator]=\"true\" [rows]=\"10\"\n                        [showCurrentPageReport]=\"true\"\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n                        [rowsPerPageOptions]=\"[10,25,50]\">\n                        <ng-template pTemplate=\"header\" let-columns>\n                            <tr>\n                                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\">\n                                    {{col.header}}\n                                    <p-sortIcon [field]=\"col.field\" ariaLabel=\"Activate to sort\"\n                                        ariaLabelDesc=\"Activate to sort in descending order\"\n                                        ariaLabelAsc=\"Activate to sort in ascending order\">\n                                    </p-sortIcon>\n                                </th>\n                            </tr>\n                        </ng-template>\n                        <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\n                            <tr>\n                                <td *ngFor=\"let col of columns\">\n                                    <span (click)=\"viewAdvisorInfo(rowData.advisorId)\"\n                                        style=\"cursor:pointer;color:#66aad2;font-weight:600;\"\n                                        *ngIf=\"col.header == 'Advisor Name'; else otherCols\">\n                                        {{rowData[col.field]}}\n                                    </span>\n                                    <ng-template #otherCols>{{rowData[col.field]}}</ng-template>\n                                </td>\n                            </tr>\n                        </ng-template>\n                    </p-table>\n                </p-card>\n            </p-tabPanel>\n            <p-tabPanel header=\"Add Student Info\">\n                <ng-template pTemplate=\"header\"><i class=\"pi pi-fw pi-plus\"></i><span style=\"margin-left: 10px;\">Add\n                        Student Info</span></ng-template>\n                <p-card>\n                    <div class=\"container-fluid\">\n                        <p-fieldset legend=\"Add Student Details\">\n                            <div class=\"row\">\n                                <div class=\"col-lg-2\" style=\"text-align: right;\">\n                                    <label style=\"font-weight: 600;\">First Name :</label>\n                                </div>\n                                <div class=\"col-lg-3\">\n                                    <input id=\"firstName\" type=\"text\" size=\"30\" pInputText\n                                        [(ngModel)]=\"studentInfo.firstname\">\n                                </div>\n                                <div class=\"col-lg-2\" style=\"text-align: right;\">\n                                    <label style=\"font-weight: 600;\">Last Name :</label>\n                                </div>\n                                <div class=\"col-lg-3\">\n                                    <input id=\"lasName\" type=\"text\" size=\"30\" pInputText\n                                        [(ngModel)]=\"studentInfo.lastName\">\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-lg-2\" style=\"text-align: right;\">\n                                    <label style=\"font-weight: 600;\">Address :</label>\n                                </div>\n                                <div class=\"col-lg-3\">\n                                    <input id=\"add\" type=\"text\" size=\"30\" pInputText [(ngModel)]=\"studentInfo.address\">\n                                </div>\n                                <div class=\"col-lg-2\" style=\"text-align: right;\">\n                                    <label style=\"font-weight: 600;\">Contact :</label>\n                                </div>\n                                <div class=\"col-lg-3\">\n                                    <input id=\"cont\" type=\"text\" maxlength=\"10\" pInputText\n                                        [(ngModel)]=\"studentInfo.contact\">\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-lg-2\" style=\"text-align: right;\">\n                                    <label style=\"font-weight: 600;\">Email Id :</label>\n                                </div>\n                                <div class=\"col-lg-3\">\n                                    <input id=\"mail\" type=\"text\" size=\"30\" pInputText [(ngModel)]=\"studentInfo.email\">\n                                </div>\n                                <div class=\"col-lg-2\" style=\"text-align: right;\">\n                                    <label style=\"font-weight: 600;\">Course :</label>\n                                </div>\n                                <div class=\"col-lg-3\">\n                                    <input id=\"cour\" type=\"text\" size=\"30\" pInputText [(ngModel)]=\"studentInfo.course\">\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-lg-2\" style=\"text-align: right;\">\n                                    <label style=\"font-weight: 600;\">Roll Number :</label>\n                                </div>\n                                <div class=\"col-lg-3\">\n                                    <input id=\"rolno\" type=\"text\" maxlength=\"6\" pInputText\n                                        [(ngModel)]=\"studentInfo.rollNo\">\n                                </div>\n                                <div class=\"col-lg-2\" style=\"text-align: right;\">\n                                    <label style=\"font-weight: 600;\">Advisor Name :</label>\n                                </div>\n                                <div class=\"col-lg-3\">\n                                    <input id=\"advis\" type=\"text\" size=\"30\" pInputText\n                                        [(ngModel)]=\"studentInfo.advisor\">\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-lg-6\" style=\"text-align: right;\">\n                                    <button pButton pRipple type=\"button\"\n                                        (click)=\"saveStudentInfo(studentInfo, dropdown)\" label=\"Save\"\n                                        class=\"p-button-raised p-button-success p-button-text\"></button>\n                                </div>\n                                <div class=\"col-lg-6\" style=\"text-align: left;\">\n                                    <button pButton pRipple type=\"button\" (click)=\"resetStudentInfo()\" label=\"Reset\"\n                                        class=\"p-button-raised p-button-info p-button-text\"></button>\n                                </div>\n                            </div>\n                        </p-fieldset>\n                    </div>\n                </p-card>\n            </p-tabPanel>\n            <p-tabPanel header=\"Edit Student Info\">\n                <ng-template pTemplate=\"header\"><i class=\"pi pi-fw pi-pencil\"></i><span style=\"margin-left: 10px;\">Edit\n                        Student Info</span></ng-template>\n                <p-card>\n                    <div class=\"container-fluid\">\n                        <p-fieldset legend=\"Search By Roll Number\">\n                            <div class=\"row\">\n                                <div class=\"col-lg-4\" style=\"text-align: right;\">\n                                    <label style=\"font-weight: 600;\">Roll Number :</label>\n                                </div>\n                                <div class=\"col-lg-3\">\n                                    <p-dropdown #dropdown maxlength=\"6\" id=\"rollNu\" placeholder=\"Select a Roll Number\"\n                                        (onChange)=\"onChangeRollNumber($event)\" [options]=\"allStudentInfo\"\n                                        [(ngModel)]=\"selectedRollNo\" optionLabel=\"rollNo\"></p-dropdown>\n                                </div>\n                                <div class=\"col-lg-2\" style=\"text-align: left;\">\n                                    <button style=\"width: -webkit-fill-available;\" pButton pRipple type=\"button\"\n                                        (click)=\"selectedRollNo = {};editedStudentInfo = {};\" label=\"Reset\"\n                                        class=\"p-button-raised p-button-info p-button-text\"></button>\n                                </div>\n                            </div>\n                        </p-fieldset>\n                        <div class=\"row\">\n                            <div class=\"col-lg-2\" style=\"text-align: right;\">\n                                <label style=\"font-weight: 600;\">First Name :</label>\n                            </div>\n                            <div class=\"col-lg-3\">\n                                <input id=\"editfirstName\" type=\"text\" size=\"30\" pInputText\n                                    [(ngModel)]=\"editedStudentInfo.firstname\">\n                            </div>\n                            <div class=\"col-lg-2\" style=\"text-align: right;\">\n                                <label style=\"font-weight: 600;\">Last Name :</label>\n                            </div>\n                            <div class=\"col-lg-3\">\n                                <input id=\"editlasName\" type=\"text\" size=\"30\" pInputText\n                                    [(ngModel)]=\"editedStudentInfo.lastName\">\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-lg-2\" style=\"text-align: right;\">\n                                <label style=\"font-weight: 600;\">Address :</label>\n                            </div>\n                            <div class=\"col-lg-3\">\n                                <input id=\"editadd\" type=\"text\" size=\"30\" pInputText\n                                    [(ngModel)]=\"editedStudentInfo.address\">\n                            </div>\n                            <div class=\"col-lg-2\" style=\"text-align: right;\">\n                                <label style=\"font-weight: 600;\">Contact :</label>\n                            </div>\n                            <div class=\"col-lg-3\">\n                                <input id=\"editcont\" type=\"text\" maxlength=\"10\" pInputText\n                                    [(ngModel)]=\"editedStudentInfo.contact\">\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-lg-2\" style=\"text-align: right;\">\n                                <label style=\"font-weight: 600;\">Email Id :</label>\n                            </div>\n                            <div class=\"col-lg-3\">\n                                <input id=\"editmail\" type=\"text\" size=\"30\" pInputText\n                                    [(ngModel)]=\"editedStudentInfo.email\">\n                            </div>\n                            <div class=\"col-lg-2\" style=\"text-align: right;\">\n                                <label style=\"font-weight: 600;\">Course :</label>\n                            </div>\n                            <div class=\"col-lg-3\">\n                                <input id=\"editcour\" type=\"text\" size=\"30\" pInputText\n                                    [(ngModel)]=\"editedStudentInfo.course\">\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-lg-2\" style=\"text-align: right;\">\n                                <label style=\"font-weight: 600;\">Roll Number :</label>\n                            </div>\n                            <div class=\"col-lg-3\">\n                                <input id=\"editrolno\" [disabled]=\"true\" type=\"text\" size=\"30\" pInputText\n                                    [(ngModel)]=\"editedStudentInfo.rollNo\">\n                            </div>\n                            <div class=\"col-lg-2\" style=\"text-align: right;\">\n                                <label style=\"font-weight: 600;\">Advisor Name :</label>\n                            </div>\n                            <div class=\"col-lg-3\">\n                                <input id=\"editadvis\" type=\"text\" size=\"30\" pInputText\n                                    [(ngModel)]=\"editedStudentInfo.advisor\">\n                            </div>\n                        </div>\n                        <div class=\"row\" id=\"updateBtn\">\n                            <div class=\"col-lg-6\" style=\"text-align: right;\">\n                                <button pButton pRipple type=\"button\" (click)=\"updateStudentInfo(editedStudentInfo)\"\n                                    label=\"Update\" class=\"p-button-raised p-button-success p-button-text\"></button>\n                            </div>\n                            <div class=\"col-lg-6\" style=\"text-align: left;\">\n                                <button pButton pRipple type=\"button\" (click)=\"removeStudentInfo()\" label=\"Remove\"\n                                    class=\"p-button-raised p-button-info p-button-text\"></button>\n                            </div>\n                        </div>\n                    </div>\n                </p-card>\n            </p-tabPanel>\n        </p-tabView>\n    </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {FormsModule } from '@angular/forms';\nimport {InputTextModule} from 'primeng/inputtext';\nimport {TabMenuModule} from 'primeng/tabmenu';\nimport {Studentservice} from './student.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport {TableModule} from 'primeng/table';\nimport {CardModule} from 'primeng/card';\nimport {ButtonModule} from 'primeng/button';\nimport {TabViewModule} from 'primeng/tabview';\nimport {ToastModule} from 'primeng/toast';\nimport { MessageService } from 'primeng/api';\nimport {DropdownModule} from 'primeng/dropdown';\nimport {FieldsetModule} from 'primeng/fieldset';\nimport {DialogModule} from 'primeng/dialog';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\nimport { NgxSpinnerService } from \"ngx-spinner\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    HttpClientModule,\n    FormsModule,\n    InputTextModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    TabMenuModule,\n    TableModule,\n    CardModule,\n    ButtonModule,\n    TabViewModule,\n    ToastModule,\n    DropdownModule,\n    FieldsetModule,\n    DialogModule,\n    NgxSpinnerModule\n  ],\n  providers: [Studentservice, MessageService, NgxSpinnerService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable  } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Student } from './student';\r\n\r\n@Injectable()\r\nexport class Studentservice {\r\n  rootUrl: string;\r\n  baseUrl:string;\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  private extractData(res: Response) {\r\n    let body = res;\r\n    return body || {};\r\n  }\r\n  private handleError(error: any) {\r\n    if (error.status == 400) {\r\n      let errMsg = 'Please try again'\r\n      return Observable.throw(errMsg);\r\n    }\r\n    let errMsg = (error.message) ? error.message :\r\n      error.status ? `${error.status} - ${error.statusText}` : 'Server error';\r\n    return Observable.throw(errMsg);\r\n  }  \r\n  getAllStudentInfo() {\r\n    this.baseUrl = 'assets/allstudentdetails.json';\r\n    return this.http.get<any>(this.baseUrl).pipe(map(this.extractData));\r\n  }\r\n  getAdvisorInfo() {\r\n    this.baseUrl = 'assets/advisors.json';\r\n    return this.http.get<any>(this.baseUrl).pipe(map(this.extractData));\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}